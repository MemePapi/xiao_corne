/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define COMBO_TIMEOUT 60

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define NUM     3
#define FUN		4
#define DANGER  5

/ {
    macros {
		hello: hello {
            label = "hello";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 10>
				,<&macro_tap &kp H &kp E &kp L &kp L &kp O>
				;
        };
    };
};


/ {
    combos {
        compatible = "zmk,combos";
 	 combo_del {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <11 12 13>;
            bindings = <&mt RALT DEL>;
        };
	 combo_cw {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <2 3 4>;
            bindings = <&caps_word>;
        };
	 combo_tab {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <10 11 12>;
            bindings = <&mt K_CONTEXT_MENU TAB>;
        };
	 combo_row {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <12 13 14>;
            bindings = <&kp LS(HOME)>;
        };
	 combo_esc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <0 1 2>;
            bindings = <&kp ESC>;
		};
	 combo_ctlbksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <6 7 8>;
            bindings = <&kp LC(BSPC)>;
        };
	 combo_bksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <16 17 18>;
            bindings = <&kp BSPC>;
        };
    };
};

&caps_word {
	continue-list = <UNDERSCORE MINUS BACKSPACE DELETE HOME END LEFT RIGHT>;
};

&kscan0 {
	debounce-period = <20>;
};
/ {
	behaviors {
        bh: layer_taps{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };
        hm: homerow_mods{
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            //quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		sm: shift_mods{
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <80>;
            //quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};
/ {
        keymap {
                compatible = "zmk,keymap";
//													Base 0
                default_layer {
                        bindings = <
//	&kp Q       &kp W        &kp E        &kp R        &kp T        &kp Y     &kp U          &kp I         &kp O        &kp P
//	&bh 1 A     &hm LALT S   &hm LCTRL D  &hm LSHFT F  &kp G        &kp H     &hm LSHFT J    &hm LCTRL K   &hm LALT L   &kp SQT
//	&mt LGUI Z  &kp X        &kp C        &kp V        &kp B        &kp N     &kp M          &kp COMMA     &kp DOT      &hm LGUI FSLH
	&kp Q       &kp W        &kp F        &kp P        &kp G        &kp J     &kp L          &kp U         &kp Y        &kp SQT
	&bh 1 A     &hm LALT R   &hm LCTRL S  &hm LSHFT T  &kp D        &kp H     &hm LSHFT N    &hm LCTRL E   &hm LALT I   &kp O
	&mt LGUI Z  &kp X        &kp C        &kp V        &kp B        &kp K     &kp M          &kp COMMA     &kp DOT      &hm LGUI FSLH
				&bh 2 ESC &bh 1 RET &bh 3 TAB            &kp BSPC &bh 2 SPACE &bh 4 DEL
                        >;
				label = "BASE";
            };
// 													NAV 1
                nav_layer {
                        bindings = <
	&trans 		&kp PG_UP 	&kp UP			&kp PG_DN	&trans     		&trans       &trans     &trans          &trans    &kp BSPC
	&trans      &kp LEFT    &kp DOWN   	  	&kp RIGHT  	&trans			&trans       &kp LSHFT  &kp LCTRL       &kp LALT  &kp LGUI
	&trans      &kp HOME    &trans      	&kp END    	&trans			&trans       &trans     &trans          &kp RALT  &trans
               	&trans  &trans  	&kp TAB                   &kp BSPC  &kp SPACE  &kp DEL
                        >;
				label = "NAV";
            };
//													SYM 2
                symbol_layer {
                        bindings = <
	&kp EXCL  &kp AT    &kp HASH    &kp DLLR     &kp PRCNT     &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR 
	&kp TAB   &kp CAPS  &kp F13     &out OUT_TOG &kp LGUI      &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp PIPE 
	&kp ESC   &kp GRAVE &kp QMARK   &kp F9       &kp F17       &kp UNDER &kp PLUS  &kp LBKT &kp RBKT &kp BSLH 
             &kp LCTRL &kp LALT    &mt LSHFT LS(INS)          &kp RET   &trans    &mt RALT TILDE
                        >;
				label = "SYM";
			};
//													NUM 3
				num_layer {
                        bindings = <
	&bt BT_SEL 0 &bt BT_SEL 1 &kp UP      &bt BT_SEL 2 &bt BT_CLR        	&kp SLASH		&kp N7 &kp N8 &kp N9  &kp MINUS
	&trans       &kp LEFT     &kp LCTRL   &kp LSHFT    &trans         		&kp KP_MULTIPLY	&kp N4 &kp N5 &kp N6  &kp PLUS
	&trans       &trans       &trans      &trans       &trans        	 	&kp N0  		&kp N1 &kp N2 &kp N3  &kp DOT
                &kp LC(LA(LSHFT)) &trans  &mt RALT RET                     		&kp RET  &kp DOT  &kp DOT
                        >;
				label = "NUM";
            };
//													FUN 4
				function_layer {
                        bindings = <
	&trans &trans &trans &trans &trans					&trans &kp F7 &kp F8 &kp F9 &kp F12
	&trans &trans &trans &trans &trans					&trans &kp F4 &kp F5 &kp F6 &kp F11
	&trans &trans &trans &trans &trans					&trans &kp F1 &kp F2 &kp F3 &kp F10
				&trans &trans &trans           &trans &trans &trans
					>;
				label = "FUN";
			};
//													DANGER 5
				danger_layer {
                        bindings = <
	&bootloader  &kp AT &kp HASH       &kp PAUSE_BREAK &kp SLCK              &kp C_VOL_UP       &hm LC(V) LC(C)      &hello &kp LC(LA(DEL)) &bootloader 
	&trans       &trans &kp LC(LSHFT)  &mt LSHFT UP    &mt LCTRL PSCRN       &kp C_VOL_DN       &trans &trans        &kp UP &kp SEMI 
	&kp LNLCK    &trans &kp LEFT       &kp DOWN        &kp RIGHT             &kp C_MUTE &trans  &kp LEFT             &kp DOWN &kp RIGHT 
              &kp LG(Z)       &kp LG(X)       &kp LG(C)                            &kp LC(LA(W))      &kp LC(LA(P))        &kp LC(LA(R))
                        >;
                label = "**DANGER**";
            };
		};
		
//
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T          |   |  Y  |  U        |  I      |  O  |  P  | 
// |  A  |  S  |  D  |  F  |  G          |   |  H  |  J        |  K      |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B          |   |  N  |  M        |  ,      |  .  |  /  | 
//             | GUI | LWR |  BSPC/LSHFT |   | SPC | RSE/BSPC  | ENT/ALT |
};